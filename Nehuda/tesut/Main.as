package {  import flash.display.Sprite;  import flash.events.Event;  import flash.events.MouseEvent;  import flash.display.Shape;  import jp.sionnet.leaflip.Leaflip;  import jp.sionnet.leaflip.LeaflipEvent;  import frocessing.color.ColorHSV;  import controls.Btn;  [SWF(backgroundColor="#EEEEEE", width="600", height="560", frameRate="30")]  public class Main extends Sprite {    // プロパティ    private static var bw:uint = 600;    private static var bh:uint = 540;    private static var pw:uint = 400;    private static var ph:uint = 300;    private var container:Sprite;    private var pages:Array;    private var sheet:Shape;    private static var max:uint = 30;    private var currentPage:uint = 0;    private var color:ColorHSV;    private var _allowFlip:Boolean = true;    private var resetBtn:Btn;    private var flipBtn:Btn;    // コンストラクタ    public function Main() {      init();    }    // メソッド    private function init():void {      container = new Sprite();      addChild(container);      container.x = 100;      container.y = 100;      color = new ColorHSV();      pages = [];      for (var n:uint = 0; n < max; n++) {        var page:Leaflip = new Leaflip(pw, ph, 50, 0.25);        page.id = n;        page.setGradient();        page.gradientAlphaRatio = 0.6;        color.h = 360/max*n;        var paper:Paper = new Paper(n, color.value);        page.addFSP(paper);        page.bgColorBSP = 0xFFFFFF;        page.allowFlip = true;        container.addChildAt(page, 0);        pages[n] = page;      }      sheet = new Shape();      sheet.graphics.beginFill(0xFFFFFF);      sheet.graphics.drawRect(0, 0, pw, ph);      sheet.graphics.endFill();      container.addChildAt(sheet, 0);      addEventListener(LeaflipEvent.PICK, pick, false, 0, true);      addEventListener(LeaflipEvent.RELEASE, release, false, 0, true);      addEventListener(LeaflipEvent.OPEN, open, false, 0, true);      addEventListener(LeaflipEvent.OPEN_COMPLETE, opened, false, 0, true);      addEventListener(LeaflipEvent.CLOSE_COMPLETE, closed, false, 0, true);      resetBtn = new Btn();      addChild(resetBtn);      resetBtn.x = 260;      resetBtn.y = 540;      resetBtn.init({label: "reset"});      resetBtn.enabled = false;      resetBtn.addEventListener(MouseEvent.CLICK, reset, false, 0, true);      flipBtn = new Btn();      addChild(flipBtn);      flipBtn.x = 340;      flipBtn.y = 540;      flipBtn.init({label: "flip"});      flipBtn.addEventListener(MouseEvent.CLICK, flip, false, 0, true);    }    private function pick(evt:LeaflipEvent):void {      container.mouseChildren = false;      allowFlip = false;    }    private function release(evt:LeaflipEvent):void {    }    private function open(evt:LeaflipEvent):void {    }    private function opened(evt:LeaflipEvent):void {      var current:Leaflip = Leaflip(evt.target);      current.alpha = 1;      current.reset();      container.addChildAt(current, 0);      currentPage = current.id + 1;      if (currentPage < max) {        container.mouseChildren = true;        allowFlip = true;      } else {        container.mouseChildren = false;        allowFlip = false;      }      manage();    }    private function closed(evt:LeaflipEvent):void {      container.mouseChildren = true;      allowFlip = true;      manage();    }    private function manage():void {      flipBtn.selected = false;      if (currentPage > 0) {        resetBtn.enabled = true;      } else {        resetBtn.enabled = false;      }      if (currentPage < max) {        flipBtn.enabled = true;      } else {        flipBtn.enabled = false;      }    }    private function reset(evt:MouseEvent):void {      resetBtn.enabled = false;      flipBtn.selected = false;      for (var n:uint = 0; n < max; n++) {        var page:Leaflip = pages[n];        page.alpha = 1;        page.reset();        container.addChildAt(page, 0);      }      container.addChildAt(sheet, 0);      container.mouseChildren = true;      allowFlip = true;      currentPage = 0;    }    private function flip(evt:MouseEvent):void {      flipBtn.selected = true;      var current:Leaflip = pages[currentPage];      current.open();    }    private function get allowFlip():Boolean {      return _allowFlip;    }    private function set allowFlip(value:Boolean):void {      _allowFlip = value;      for (var n:uint = 0; n < max; n++) {        var page:Leaflip = pages[n];        page.allowFlip = value;      }    }  }}import flash.display.Sprite;import flash.display.Shape;import flash.filters.DropShadowFilter;import controls.Label;internal class Paper extends Sprite {  // プロパティ  private var id:uint;  private static var pw:uint = 400;  private static var ph:uint = 300;  private var color:uint;  private static var week:Array = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];  // コンストラクタ  public function Paper(n:uint, c:uint) {    id = n;    color = c;    init();  }  // メソッド  private function init():void {    var sheet:Shape = new Shape();    sheet.graphics.beginFill(color);    sheet.graphics.drawRect(0, 0, pw, ph);    sheet.graphics.endFill();    addChild(sheet);    var dropShadow:DropShadowFilter = new DropShadowFilter(2, 90, 0x000000, 0.4, 4, 4, 1.5, 3);    var month:Label = new Label(200, 40, 40, Label.CENTER);    addChild(month);    month.x = 100;    month.y = 10;    month.textColor = 0xFFFFFF;    month.text = "2014/9";    month.filters = [dropShadow];    var day:Label = new Label(200, 120, 120, Label.CENTER);    addChild(day);    day.x = 100;    day.y = 80;    day.textColor = 0xFFFFFF;    day.text = String(id + 1);    day.filters = [dropShadow];    var date:Date = new Date(2014, 8, id + 1);    var weekday:Label = new Label(200, 60, 60, Label.CENTER);    addChild(weekday);    weekday.x = 100;    weekday.y = 210;    weekday.textColor = 0xFFFFFF;    weekday.text = "(" + week[date.day] + ")";    weekday.filters = [dropShadow];  }}